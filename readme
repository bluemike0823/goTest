work : 
go run main.go dev        

go dockerize :
docker build --no-cache -t gotest-container .
docker run -d --name postgres -p 0.0.0.0:5432:5432 -e POSTGRES_PASSWORD=aadd2255 postgres:13.12

switch docker:
bcdedit /set hypervisorlaunchtype auto
dism.exe /Online /Enable-Feature:Microsoft-Hyper-V /All

switch bs5:
bcdedit /set hypervisorlaunchtype off
dism.exe /Online /Disable-Feature:Microsoft-Hyper-V

Postgres container params : 
container name : postgrescontainer
POSTGRES_USER : postgres
POSTGRES_PASSWORD : ad25*2
POSTGRES_DB : postgres

for virtual server :
curl https://kktix.com
traceroute kktix.com

sudo apt update
sudo apt install software-properties-common
sudo apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev wget
wget https://www.python.org/ftp/python/3.9.9/Python-3.9.9.tgz
tar -xf Python-3.9.9.tgz

sudo apt-get install build-essential
cd Python-3.9.9
./configure --enable-optimizations
make -j$(nproc)
sudo make altinstall

sudo apt install git
git clone https://github.com/max32002/tixcraft_bot
cd tixcraft_bot
python3.9 -m pip3.9 install -r pip-req.txt
python -m pip install -r pip-req.txt

# python3.9 -m tkinter
sudo apt-get install python3-tk
python3.9 settings.py
python settings.py

xvfb-run python3 settings.py

# install pip3.9
wget https://bootstrap.pypa.io/get-pip.py
sudo apt install zlib1g zlib1g-dev
cd Python-3.9.9
./configure --enable-optimizations
make -j$(nproc)
sudo make altinstall

# for mysql params
MYSQL_DATABASE : postgres
MYSQL_USER : postgres
MYSQL_PASSWORD : aadd2255
MYSQL_ROOT_PASSWORD : aadd2255
MYSQL_ALLOW_EMPTY_PASSWORD : no
MYSQL_RANDOM_ROOT_PASSWORD : yes

sudo python3.9 get-pip.py

# gcloud service
# app5252
gcloud auth login

# gcloud config set project gotest-405213

gcloud iam service-accounts create "github-service-account" --project %GOTEST_PROJECT_ID%

gcloud iam workload-identity-pools create "github-pool" --project=%GOTEST_PROJECT_ID% --location="global" --display-name="GitHub Deployment Poll"

gcloud iam workload-identity-pools describe "github-pool" --project=%GOTEST_PROJECT_ID% --location="global" --format="value(name)"

gcloud iam workload-identity-pools providers create-oidc "github-provider" --project=%GOTEST_PROJECT_ID% --location="global" --workload-identity-pool="github-pool" --display-name="Github Provider" --attribute-mapping="google.subject=assertion.sub,attribute.actor=assertion.actor,attribute.repository=assertion.repository" --issuer-uri="https://token.actions.githubusercontent.com"

gcloud iam service-accounts add-iam-policy-binding "github-service-account@"%GOTEST_PROJECT_ID%".iam.gserviceaccount.com" --project=%GOTEST_PROJECT_ID% --role="roles/iam.workloadIdentityUser" --member="principalSet://iam.googleapis.com/"%GOTEST_WORKLOAD_IDENTITY_POOL_ID%"/attribute.repository/"%GOTEST_REPO%